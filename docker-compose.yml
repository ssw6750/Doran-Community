version: "3"
services:
  frontend:
    # restart: "on-failure"
    image: seoseokwon/docker-frontend
    # build:
    #   context: ./client
    #   dockerfile: Dockerfile
    volumes:
      - /app/node_modules
      - ./client:/app
    environment:
      - CHOKIDAR_USEPOLLING=true
    stdin_open: true
    # tty: true
    mem_limit: 256m
    # ports:
    #   - "3000:3000"

  nginx:
    restart: always
    image: seoseokwon/docker-nginx  
    # build:
    #   dockerfile: Dockerfile
    #   context: ./nginx
    ports:
    - "80:80"
    mem_limit: 256m
    links:
      - frontend
      - backend

  backend:
    image: seoseokwon/docker-backend
    container_name: backend
    restart: always
    # build: 
    #   context: ./server
    #   dockerfile: Dockerfile
    volumes:
      - /app/node_modules
      - ./server:/app
    mem_limit: 256m
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DATABASE: postgres
      POSTGRES_HOST: docker-valonity.cgnoahowkfxn.ap-northeast-1.rds.amazonaws.com
      POSTGRES_PORT: 5432


# # -----------------------------------------

  # db:
  #   image: postgres:latest
  #   container_name: postgres
  #   restart: always
  #   ports:
  #     - "5432:5432"
  #   environment:
  #     POSTGRES_USER: "${DB_USER_ID}"
  #     POSTGRES_PASSWORD: "1234"
  #   # 기본 데이터디렉터리 "/var/lib/postgresql/data" 
  #   volumes:
  #     - ./data:/var/lib/postgresql/data




















# version: "3"
# services:
#   db:
#     image: postgres:latest
#     container_name: postgres
#     restart: always
#     ports:
#       - "5432:5432"
#     environment:
#       POSTGRES_USER: "${DB_USER_ID}"
#       POSTGRES_PASSWORD: "${DB_USER_PASSWORD}"
#     # 기본 데이터디렉터리 "/var/lib/postgresql/data" 
#     volumes:
#       - ./data:/var/lib/postgresql/data
